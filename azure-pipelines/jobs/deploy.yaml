jobs:
- job: Deploy
  displayName: Deploy
  variables:
  - group: mask-subscription-ids
  - group: aks-credentials-kv-group

  steps:
  - template: ../steps/append-sha.yaml
  - template: ../steps/debug-vars.yaml
  - template: ../steps/setup-kubelogin.yaml

  - bash: |
      export KUBECONFIG=$(pwd)/.kubeconfig-$(aksClusterName)
      echo $KUBECONFIG
      echo ""
      echo $CONFIG_TEST
      echo ""
      kubelogin convert-kubeconfig -l spn

      kubectl get pods --namespace aks-architect
    displayName: "still have context?"
    env:
      CONFIG_TEST:                         $(Build.SourcesDirectory)/.kubeconfig-$(aksClusterName)
      AAD_SERVICE_PRINCIPAL_CLIENT_ID:     $(aks-architect-ci-dev-sp-client-id)
      AAD_SERVICE_PRINCIPAL_CLIENT_SECRET: $(aks-architect-ci-dev-sp-client-secret)

  # - bash: |
  #     touch .kubeconfig-${CLUSTER_NAME}
  #     export KUBECONFIG=$(pwd)/.kubeconfig-${CLUSTER_NAME}
  #     kubelogin convert-kubeconfig -l spn
  #     kubectl get pods --namespace aks-architect
  #   # explicitly map Key Vault integrated secrets
  #     # kubelogin convert-kubeconfig -l azurecli
  #   env:
  #     AAD_SERVICE_PRINCIPAL_CLIENT_ID:     $(aks-architect-ci-dev-sp-client-id)
  #     AAD_SERVICE_PRINCIPAL_CLIENT_SECRET: $(aks-architect-ci-dev-sp-client-id)
  #   displayName: try kubelogin
  # - bash: |
  #     cat ./k8s-manifests/deployment.yaml | envsubst | kubectl apply -f -
  #     cat ./k8s-manifests/service.yaml | envsubst | kubectl apply -f -
  #     cat ./k8s-manifests/ingress.yaml | envsubst | kubectl apply -f -
  #   env:
  #     IMAGE_TAG: $(imageTag)
