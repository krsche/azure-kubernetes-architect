jobs:
- job: Deploy
  displayName: Deploy
  variables:
  - group: mask-subscription-ids
  - group: aks-credentials-kv-group
  - name: CLUSTER_NAME
    value: cloudkube-dev-r9er-cluster
  - name: RG_AKS
    value: cloudkube-dev-r9er-rg
  steps:
  - template: ../steps/append-sha.yaml
  - template: ../steps/debug-vars.yaml
  - template: ../steps/install-kubelogin.yaml

  - task: Kubernetes@1
    displayName: kubectl get pods
    inputs:
      connectionType: Kubernetes Service Connection
      kubernetesServiceEndpoint: test-k8s-ns-connection
      command: get pods
      namespace: aks-architect
      # azureResourceGroup: $(RG_AKS)
      # kubernetesCluster: $(CLUSTER_NAME)

  # # https://stackoverflow.com/questions/54004007/azure-devop-pipelines-authentication-to-aks-with-azure-ad-rbac-configured
  # - bash: |
  #     az login \
  #       --service-principal \
  #       --username $AAD_SERVICE_PRINCIPAL_CLIENT_ID \
  #       --password $AAD_SERVICE_PRINCIPAL_CLIENT_SECRET \
  #       --tenant $AZ_TENANT_ID

  #     # Do comments work here?
  #     touch .kubeconfig-${CLUSTER_NAME}
  #     chmod 600 .kubeconfig-${CLUSTER_NAME}

  #     az aks get-credentials \
  #       --resource-group $RG_AKS \
  #       --name $CLUSTER_NAME \
  #       --overwrite-existing \
  #       --file .kubeconfig-${CLUSTER_NAME}

  #     export KUBECONFIG=$(pwd)/.kubeconfig-${CLUSTER_NAME}
  #     kubelogin convert-kubeconfig -l spn

  #     kubectl get pods --namespace aks-architect

  #   displayName: Try Kubelogin cleaned up
  #   continueOnError: true
  #   env:
  #     AZ_TENANT_ID:                        $(tenant-id)
  #     AAD_SERVICE_PRINCIPAL_CLIENT_ID:     $(aks-architect-ci-dev-sp-client-id)
  #     AAD_SERVICE_PRINCIPAL_CLIENT_SECRET: $(aks-architect-ci-dev-sp-client-secret)

  # - bash: |
  #     export KUBECONFIG=$(pwd)/.kubeconfig-${CLUSTER_NAME}
  #     kubelogin convert-kubeconfig -l spn
  #     kubectl get pods --namespace aks-architect
  #   displayName: "still have context?"
  #   env:
  #     AAD_SERVICE_PRINCIPAL_CLIENT_ID:     $(aks-architect-ci-dev-sp-client-id)
  #     AAD_SERVICE_PRINCIPAL_CLIENT_SECRET: $(aks-architect-ci-dev-sp-client-secret)
  #     # AZ_TENANT_ID:                        $(tenant-id)


      # az aks get-credentials \
      #   --resource-group $RG_AKS \
      #   --name $CLUSTER_NAME \
      #   --overwrite-existing \
      #   --file .kubeconfig-${CLUSTER_NAME}

      # export KUBECONFIG=$(pwd)/.kubeconfig-${CLUSTER_NAME}
      # kubelogin convert-kubeconfig -l spn

      # kubectl get pods --namespace aks-architect




  # IMAGE_TAG: $(imageTag)
  # kubelogin convert-kubeconfig -l azurecli
  # kubectl get pods --namespace aks-architect

  # Seems no access to ~ so no idea where kubeconfig is ü§∑‚Äç‚ôÄÔ∏è
  # - bash: |
  #     ls -oa ~/.kube/config
  #     ls -oa $HOME/.kube/config
  #   displayName: verify location of kubeconfig

      # kubelogin convert-kubeconfig -l spn
  # - bash: |
  #     touch .kubeconfig-${CLUSTER_NAME}
  #     export KUBECONFIG=$(pwd)/.kubeconfig-${CLUSTER_NAME}
  #     kubelogin convert-kubeconfig -l spn
  #     kubectl get pods --namespace aks-architect
  #   # explicitly map Key Vault integrated secrets
  #     # kubelogin convert-kubeconfig -l azurecli
  #   env:
  #     AAD_SERVICE_PRINCIPAL_CLIENT_ID:     $(aks-architect-ci-dev-sp-client-id)
  #     AAD_SERVICE_PRINCIPAL_CLIENT_SECRET: $(aks-architect-ci-dev-sp-client-id)
  #   displayName: try kubelogin
  # - bash: |
  #     cat ./k8s-manifests/deployment.yaml | envsubst | kubectl apply -f -
  #     cat ./k8s-manifests/service.yaml | envsubst | kubectl apply -f -
  #     cat ./k8s-manifests/ingress.yaml | envsubst | kubectl apply -f -
  #   env:
  #     IMAGE_TAG: $(imageTag)

  # - task: AzureCLI@2
  #   displayName: kubectl
  #   inputs:
  #     azureSubscription: $(armConnection)
  #     scriptType: bash
  #     scriptLocation: inlineScript
  #     inlineScript: |
  #       az --version
  #       kubectl get pods --namespace aks-architect
  #     env:
  #       IMAGE_TAG: $(imageTag)
